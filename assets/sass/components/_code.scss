@use "../abstracts/breakpoints" as b;
@use "../abstracts/mixins" as m;
@use "../abstracts/variables" as v;

:is(:not(pre) > code, kbd, samp){
  background-color: var(--cl-syntax-bg);
  color: var(--cl-syntax-keyword);
  font-family: v.$font__family--mono;
  font-size: v.$font__size--sm;
  padding: 0.2em 0.4em;
  border-radius: 3px;
}

kbd {
  border: 1px solid var(--cl-border-default);
}

samp {
  border-left: 3px solid var(--cl-syntax-keyword);
}

// SYNTAX
.bg {
  color: var(--cl-syntax-text);
  background-color: var(--cl-syntax-bg);
}

.chroma {
  color: var(--cl-syntax-text);
  background-color: var(--cl-syntax-bg);
  padding: 1rem;
  margin-block: 2.5rem;
  margin-inline: 1rem;
  max-width: 100%;
  overflow-x: auto;
  border: 2px solid var(--cl-border-default);
  border-radius: 1rem;
  box-shadow: var(--shadow-md);
  font-family: v.$font__family--mono;

  scrollbar-width: thin;
  scrollbar-color: var(--bg-second) var(--bg-body);
  
  &:hover {
    scrollbar-color: var(--cl-accent) var(--bg-body);
  }

  .err {
    color: var(--cl-syntax-error);
  }

  .lnlinks {
    outline: none;
    text-decoration: none;
    color: inherit;
  }

  .lntd {
    vertical-align: top;
    padding: 0;
    margin: 0;
    border: 0;
  }

  .lntable {
    border-spacing: 0;
    padding: 0;
    margin: 0;
    border: 0;
  }

  .hl {
    background-color: var(--cl-syntax-highlight);
  }

  .lnt {
    white-space: pre;
    -webkit-user-select: none;
    user-select: none;
    margin-right: 0.4em;
    padding: 0 0.4em 0 0.4em;
    color: var(--cl-syntax-line-number);
  }

  .ln {
    white-space: pre;
    -webkit-user-select: none;
    user-select: none;
    margin-right: 0.4em;
    padding: 0 0.4em 0 0.4em;
    color: var(--cl-syntax-line-number-alt);
  }

  .line {
    display: flex;
  }

  .k {
    color: var(--cl-syntax-keyword);
  }

  .kc {
    color: var(--cl-syntax-keyword-constant);
  }

  .kd {
    color: var(--cl-syntax-keyword);
  }

  .kn {
    color: var(--cl-syntax-keyword);
  }

  .kp {
    color: var(--cl-syntax-keyword-constant);
  }

  .kr {
    color: var(--cl-syntax-keyword);
  }

  .kt {
    color: var(--cl-syntax-keyword);
  }

  .nc {
    color: var(--cl-syntax-class);
    font-weight: bold;
  }

  .no {
    color: var(--cl-syntax-constant);
    font-weight: bold;
  }

  .nd {
    color: var(--cl-syntax-decorator);
    font-weight: bold;
  }

  .ni {
    color: var(--cl-syntax-entity);
  }

  .ne {
    color: var(--cl-syntax-class);
    font-weight: bold;
  }

  .nf {
    color: var(--cl-syntax-function);
    font-weight: bold;
  }

  .nl {
    color: var(--cl-syntax-label);
    font-weight: bold;
  }

  .nn {
    color: var(--cl-syntax-namespace);
  }

  .py {
    color: var(--cl-syntax-variable);
  }

  .nt {
    color: var(--cl-syntax-tag);
  }

  .nv {
    color: var(--cl-syntax-variable);
  }

  .l {
    color: var(--cl-syntax-literal);
  }

  .ld {
    color: var(--cl-syntax-keyword-constant);
  }

  .s {
    color: var(--cl-syntax-string);
  }

  .sa {
    color: var(--cl-syntax-keyword-constant);
  }

  .sb {
    color: var(--cl-syntax-string);
  }

  .sc {
    color: var(--cl-syntax-string);
  }

  .dl {
    color: var(--cl-syntax-keyword-constant);
  }

  .sd {
    color: var(--cl-syntax-string);
  }

  .s2 {
    color: var(--cl-syntax-string);
  }

  .se {
    color: var(--cl-syntax-keyword-constant);
  }

  .sh {
    color: var(--cl-syntax-keyword-constant);
  }

  .si {
    color: var(--cl-syntax-string);
  }

  .sx {
    color: var(--cl-syntax-string);
  }

  .sr {
    color: var(--cl-syntax-keyword-constant);
  }

  .s1 {
    color: var(--cl-syntax-string);
  }

  .ss {
    color: var(--cl-syntax-string);
  }

  .m {
    color: var(--cl-syntax-number);
  }

  .mb {
    color: var(--cl-syntax-number);
  }

  .mf {
    color: var(--cl-syntax-number);
  }

  .mh {
    color: var(--cl-syntax-number);
  }

  .mi {
    color: var(--cl-syntax-number);
  }

  .il {
    color: var(--cl-syntax-number);
  }

  .mo {
    color: var(--cl-syntax-number);
  }

  .o {
    color: var(--cl-syntax-operator);
    font-weight: bold;
  }

  .ow {
    color: var(--cl-syntax-operator);
    font-weight: bold;
  }

  .c {
    color: var(--cl-syntax-comment);
    font-style: italic;
  }

  .ch {
    color: var(--cl-syntax-comment);
    font-style: italic;
  }

  .cm {
    color: var(--cl-syntax-comment);
    font-style: italic;
  }

  .c1 {
    color: var(--cl-syntax-comment);
    font-style: italic;
  }

  .cs {
    color: var(--cl-syntax-comment);
    font-weight: bold;
    font-style: italic;
  }

  .cp {
    color: var(--cl-syntax-comment);
    font-weight: bold;
    font-style: italic;
  }

  .cpf {
    color: var(--cl-syntax-comment);
    font-weight: bold;
    font-style: italic;
  }

  .gd {
    color: var(--cl-syntax-deleted);
    background-color: var(--cl-syntax-deleted-bg);
  }

  .ge {
    font-style: italic;
  }

  .gr {
    color: var(--cl-syntax-deleted);
  }

  .gh {
    color: var(--cl-syntax-heading);
    font-weight: bold;
  }

  .gi {
    color: var(--cl-syntax-inserted);
    background-color: var(--cl-syntax-inserted-bg);
  }

  .go {
    color: var(--cl-syntax-generic);
  }

  .gp {
    color: var(--cl-syntax-generic);
  }

  .gs {
    font-weight: bold;
  }

  .gu {
    color: var(--cl-syntax-heading);
  }

  .gt {
    color: var(--cl-syntax-traceback);
  }

  .gl {
    text-decoration: underline;
  }

  .w {
    color: var(--cl-syntax-whitespace);
  }
  :is(.x, .cl, .n, .na, .nb, .bp, .nx, .vc, .vg, .vi, .vm, .p, .g) {
    color: inherit;
    background: transparent;
  }
}